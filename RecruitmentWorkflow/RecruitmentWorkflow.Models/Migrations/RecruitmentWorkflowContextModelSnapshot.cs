// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentWorkflow.Models.Models;

#nullable disable

namespace RecruitmentWorkflow.Models.Migrations
{
    [DbContext(typeof(RecruitmentWorkflowContext))]
    partial class RecruitmentWorkflowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandidateJob", b =>
                {
                    b.Property<int>("CandidatesId")
                        .HasColumnType("int");

                    b.Property<int>("JobsId")
                        .HasColumnType("int");

                    b.HasKey("CandidatesId", "JobsId");

                    b.HasIndex("JobsId");

                    b.ToTable("CandidateJob");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10000L);

                    b.Property<int>("CandidateStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("OverAllRating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.CandidateStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Candidat__3214EC076177A841");

                    b.HasIndex(new[] { "Status" }, "UQ__Candidat__3A15923FE89B1936")
                        .IsUnique();

                    b.ToTable("CandidateStatusMaster", (string)null);
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.EmployeeRoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC073A611E34");

                    b.HasIndex(new[] { "Name" }, "UQ__Employee__737584F6385BDBEC")
                        .IsUnique();

                    b.ToTable("EmployeeRoleMaster", (string)null);
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 500L);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewStatus")
                        .HasColumnType("int");

                    b.Property<int?>("InterviewStatusMasterId")
                        .HasColumnType("int");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentStage")
                        .HasColumnType("int");

                    b.Property<int?>("RecruitmentStageMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("InterviewStatusMasterId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("JobId");

                    b.HasIndex("RecruitmentStageMasterId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.InterviewStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Intervie__3214EC07A4211FC5");

                    b.HasIndex(new[] { "Status" }, "UQ__Intervie__3A15923FA620AEE9")
                        .IsUnique();

                    b.ToTable("InterviewStatusMaster", (string)null);
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.JobCandidates", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.HasKey("JobId", "CandidateId");

                    b.HasIndex("CandidateId");

                    b.ToTable("JobsCandidates");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.RecruitmentStageMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Recruitm__3214EC0797E0C968");

                    b.HasIndex(new[] { "Stage" }, "UQ__Recruitm__BA80465BBF59DEDC")
                        .IsUnique();

                    b.ToTable("RecruitmentStageMaster", (string)null);
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.WorkflowData.MyCandidateData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CandidateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CandidateStatus")
                        .HasColumnType("int");

                    b.Property<int>("CurrentInterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStage")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStageStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MyCandidates");
                });

            modelBuilder.Entity("CandidateJob", b =>
                {
                    b.HasOne("RecruitmentWorkflow.Models.Models.Candidate", null)
                        .WithMany()
                        .HasForeignKey("CandidatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentWorkflow.Models.Models.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Employee", b =>
                {
                    b.HasOne("RecruitmentWorkflow.Models.Models.EmployeeRoleMaster", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.Interview", b =>
                {
                    b.HasOne("RecruitmentWorkflow.Models.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentWorkflow.Models.Models.InterviewStatusMaster", "InterviewStatusMaster")
                        .WithMany()
                        .HasForeignKey("InterviewStatusMasterId");

                    b.HasOne("RecruitmentWorkflow.Models.Models.Employee", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentWorkflow.Models.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentWorkflow.Models.Models.RecruitmentStageMaster", "RecruitmentStageMaster")
                        .WithMany()
                        .HasForeignKey("RecruitmentStageMasterId");

                    b.Navigation("Candidate");

                    b.Navigation("InterviewStatusMaster");

                    b.Navigation("Interviewer");

                    b.Navigation("Job");

                    b.Navigation("RecruitmentStageMaster");
                });

            modelBuilder.Entity("RecruitmentWorkflow.Models.Models.JobCandidates", b =>
                {
                    b.HasOne("RecruitmentWorkflow.Models.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentWorkflow.Models.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");
                });
#pragma warning restore 612, 618
        }
    }
}
