// <auto-generated />
using System;
using LearnLINQ.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnLINQ.Migrations
{
    [DbContext(typeof(LINQDBContext))]
    [Migration("20240628073439_Intitial")]
    partial class Intitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnLINQ.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Obere Str. 57",
                            City = "Berlin",
                            CompanyName = "Alfreds Futterkiste",
                            ContactName = "Maria Anders",
                            Country = "Germany"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Avda. de la Constitución 2222",
                            City = "México D.F.",
                            CompanyName = "Ana Trujillo Emparedados y helados",
                            ContactName = "Ana Trujillo",
                            Country = "Mexico"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Mataderos  2312",
                            City = "México D.F.",
                            CompanyName = "Antonio Moreno Taquería",
                            ContactName = "Antonio Moreno",
                            Country = "Mexico"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "120 Hanover Sq.",
                            City = "London",
                            CompanyName = "Around the Horn",
                            ContactName = "Thomas Hardy",
                            Country = "UK"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "Berguvsvägen  8",
                            City = "Luleå",
                            CompanyName = "Berglunds snabbköp",
                            ContactName = "Christina Berglund",
                            Country = "Sweden"
                        });
                });

            modelBuilder.Entity("LearnLINQ.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2015, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 814.50m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2015, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 228.00m
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            OrderDate = new DateTime(2015, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 100.00m
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 4,
                            OrderDate = new DateTime(2015, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 500.00m
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 5,
                            OrderDate = new DateTime(2015, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 200.00m
                        });
                });

            modelBuilder.Entity("LearnLINQ.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 10,
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 5,
                            UnitPrice = 10.00m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 1,
                            Quantity = 2,
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 4,
                            Quantity = 10,
                            UnitPrice = 22.00m
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 5,
                            Quantity = 5,
                            UnitPrice = 21.35m
                        });
                });

            modelBuilder.Entity("LearnLINQ.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Beverages",
                            ProductName = "Chai",
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "Beverages",
                            ProductName = "Chang",
                            UnitPrice = 19.00m
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Condiments",
                            ProductName = "Aniseed Syrup",
                            UnitPrice = 10.00m
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Condiments",
                            ProductName = "Chef Anton's Cajun Seasoning",
                            UnitPrice = 22.00m
                        },
                        new
                        {
                            ProductId = 5,
                            Category = "Condiments",
                            ProductName = "Chef Anton's Gumbo Mix",
                            UnitPrice = 21.35m
                        });
                });

            modelBuilder.Entity("LearnLINQ.Models.Order", b =>
                {
                    b.HasOne("LearnLINQ.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LearnLINQ.Models.OrderDetail", b =>
                {
                    b.HasOne("LearnLINQ.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnLINQ.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LearnLINQ.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LearnLINQ.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("LearnLINQ.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
